#!/usr/bin/env bash
set -eou pipefail

# tat2:
#  glue for 3dcalc 3dTcat and 3dTstat (+ 3dNotes)
#  to compute time average T2

# default values
SCALE=1000
MASK_REL="subject_mask.nii.gz"
MASK=""
MKMASK=0
OUTPUT=tat2star.nii.gz


usage(){
  cat <<-HEREDOC
  USAGE:
    $0 '/paths/to/*/t2.nii.gz' [-mask /the/only/mask.nii.gz] [-mask_rel $MASK_REL]  [-output $OUTPUT] [-scale $SCALE] [-mkmask]
HEREDOC
  exit 1
}
err() { echo -e "$@" >&2; exit 1; }
msg() { echo -e "# [$(date)] $@"; }

# keep args around for 3dNotes history
allargs="$@"

[ $# -eq 0 ] && usage

# read in any arguments/paramaters
declare -a glob
while [ $# -gt 0 ]; do
 case $1 in
  -mask)     MASK="$2"; shift 2;;
  -mask_rel) MASK_REL="$2"; shift 2;;  
  -output)   OUTPUT="$2"; shift 2;;
  -scale)    SCALE="$2"; shift 2;;
  -mkmask)   MKMASK=1; shift;;
  -h*)       usage;;
  -*)        echo "unknown option '$1'"; usage;;
  *)         glob+=("$1"); shift;;
 esac
done

# need to have at least one file to average
[ -z "${glob[*]}" ] && usage

# how many files do we have
nfiles=$(find -L ${glob[@]} -maxdepth 0 | wc -l)
[ $nfiles -eq 0 ] && err "no files match input globs: ${glob[@]}"
[ $nfiles -eq 1 ] && echo "WARNING: only one file matches '${glob[@]}'. expected all (>1) runs" 

[ -r "$OUTPUT" ] && echo "# have $OUTPUT; rm $OUTPUT # to redo" && exit 0

tmpd=$(mktemp -d /tmp/tat2star_XXXX)

cnt=0
for input in ${glob[@]}; do
   [ -n "$MASK" ] && mask="$MASK" || mask="$(dirname "$input")/$MASK_REL"
   if [ ! -r $mask ]; then
      [ $MKMASK -eq 0 ] && err "subject_mask '$mask' DNE; add -mkmask to create"
      err "make mask not implemented!"
   fi
   # add _tat2.nii.gz to the end
   runoutput="$tmpd/${cnt}_tat2.nii.gz"

   # calc number of voxels
   numvox=$(3dBrickStat -count -non-zero $mask)

   # verbose
   msg "tat2: $input -> $runoutput"
   vol_mean=$tmpd/${cnt}_volsum.1D

   # calc sum of each volume
   3dROIstats -mask $mask -1Dformat $input > $vol_mean 

   # normalize each voxel by the volume average
   # scale by SCALE and number of good (within mask) voxels in the run
   3dcalc \
     -a $input \
     -b $vol_mean\
     -datum float -overwrite \
     -expr "(a/b)*$SCALE/$numvox" \
     -prefix $runoutput
  let ++cnt
done

[ $cnt -ne $nfiles ] && err "ERROR: create $cnt/$nfiles in $tmpd"

msg "tat2star $OUTPUT"
if [ $nfiles -gt 1 ]; then
   3dTcat -overwrite -prefix $tmpd/tat2_all.nii.gz $tmpd/*_tat2.nii.gz
   3dTstat -prefix $OUTPUT -overwrite -nzmean $tmpd/tat2_all.nii.gz
else
   3dTstat -prefix $OUTPUT -overwrite -nzmean $tmpd/0_tat2.nii.gz
fi

3dNotes -h "$0 $allargs # $(pwd)" $OUTPUT
rm -r $tmpd
