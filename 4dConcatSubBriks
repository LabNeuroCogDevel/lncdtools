#!/usr/bin/env bash
set -euo pipefail
trap 'e=$?; [ $e -ne 0 ] && echo "$0 exited in error"' EXIT

# wrap around 3dbucket and 3drefit
# extract a subbrick from a list of nifti 
# label with luna ids
#
# Useful for quality checking many structurals, subject masks,  or individual contrasts

# input:
#   1) prefix
#   2) a glob. eg /Volumes/Zeus/preproc/pet_frog/MHTask_pet/*/contrasts/Frogger/hashContrasts_FM_GAM_stats2+tlrc.HEAD
#   3) [optional] sub brick (0 if not provided)
# env
#  NOAFNI=1 4dConcatSubBricks prefix 'glob' # NOAFNI=1 will skip opening anfi and generating outliers

[ $# -lt 2 ] && 
  echo -e "look at a single brick accross subjects\nUSAGE: $0 output.nii.gz 'gl*ob' [subbrik]" >&2 &&
  exit 1

prefix="$1"; shift
glob="$1"; shift
[ $# -ne 0 ] && subbrik="$1" || subbrik=0

[ -z "$(ls $glob)" ] && echo "bad glob provided ($glob). consider .HEAD?" >&2 && exit 1

ids="$(ls $glob | perl -lne 'print $& if m/\d{5}(_\d{8})?/')"
[ -z "$ids" ] && echo "could not find lunaid(_date) in provided glob" >&2 && exit 1

if [ ! -r "$prefix" ]; then
   echo "3dbucket: combine"
   3dbucket -prefix "$prefix" $(ls $glob | sed "s/$/[$subbrik]/")
   echo "3drefit: relabel"
   3drefit -relabel_all_str "$ids" "$prefix"
else 
   echo "rm $prefix # to regenerate; skipping 3dbucket and 3drefit"
fi

env | grep NOAFNI && exit 0

afni -com 'OPEN_WINDOW axialgraph' "$prefix"  >/dev/null 2>&1

outidx=$(3dROIstats -quiet  -mask "3dcalc( -expr step(a) -a $prefix[0] )"  $prefix |
         Rscript -e 'd<-read.table("stdin");cat(paste(sep=",",collapse=",",which( abs(d$V1) > abs(mean(d$V1))+2*sd(d$V1) )-1))')
if [ -n "$outidx" ]; then
   echo "outlier idxes: $outidx"
   echo -n "outlier labels: "
   3dinfo -label "$prefix[$outidx]"
fi

