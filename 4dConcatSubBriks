#!/usr/bin/env bash
set -euo pipefail
trap 'e=$?; [ $e -ne 0 ] && echo "$0 exited in error"' EXIT
env | grep -q ^DRYRUN=. && DRYRUN=echo || DRYRUN=""
env | grep -q ^NOAFNI= || NOAFNI=1

usage(){
  cat >&2 <<HEREDOC
USAGE:
  $(basename $0) [options] output.nii.gz 'gl*ob' [subbrik]"

EXAMPLE:
  $(basename $0) allmprage.nii.gz '1*_2*/struct/*/*_G2_256x240*/mprage_warp_linear.nii.gz'

SYNOPSIS:
 wrap around 3dbucket and 3drefit
 extract a subbrick from a list of nifti 
 label with luna ids

 Useful for quality checking many structurals, subject masks,  or individual contrasts

OPTIONS: (are optional)
 -a                # show afni afteward
 -p '\d{5}_\d{8}'  # change id pattern
 -h                # this help

ARGUMENTS:
 output.nii.gz - final file to create
 'gl*ob' - file glob matching all images to concat. MUST BE QUOTED
 subbrik (optional) specify with volume of each globbed file to use
HEREDOC
  exit 1
}

[ $# -lt 2 ] && usage
PATTERN='\d{5}_\d{8}'
case $1 in
  -p) PATTERN="$2"; shift 2;;
  -a) NOAFNI=""; shift;;
  -h) usage;;
   *) ;; # nothing to do. will use stuff later
esac
[ $# -eq 0 ] && echo "need output and glob arguments. see -h" && exit 1
[ $# -gt 3 ] && echo "too many input argumetns ($#)! did you put single quotes around the 'gl*ob'?" >&2 && exit 1

prefix="$1"; shift
glob="$1"; shift
[ $# -ne 0 ] && subbrik="$1" || subbrik=0

! [[ $prefix =~ nii$|nii.gz$|.HEAD$ ]] && echo "prefix '$prefix' must end in .nii, .nii.gz, or .HEAD" && exit 1
[ -z "$(ls $glob)" ] && echo "bad glob provided ($glob). consider .HEAD?" >&2 && exit 1

ids="$(ls $glob | grep -Po "$PATTERN")"
[ -z "$ids" ] && echo "could not find ID using pattern '$PATTERN' in provided glob '$glob'" >&2 && exit 1


if [ ! -r "$prefix" ]; then
   echo "3dbucket: combine"
   $DRYRUN 3dbucket -prefix "$prefix" $(ls $glob | sed "s/$/[$subbrik]/")
   echo "3drefit: relabel"
   $DRYRUN 3drefit -relabel_all_str "$ids" "$prefix"
else 
   echo "rm $prefix # to regenerate; skipping 3dbucket and 3drefit"
fi

[ -n "$DRYRUN" ] && exit 0
[ -n "$NOAFNI" ] && exit 0

afni -com 'OPEN_WINDOW axialgraph' "$prefix"  >/dev/null 2>&1

outidx=$(3dROIstats -quiet  -mask "3dcalc( -expr step(a) -a $prefix[0] )"  $prefix |
         Rscript -e 'd<-read.table("stdin");cat(paste(sep=",",collapse=",",which( abs(d$V1) > abs(mean(d$V1))+2*sd(d$V1) )-1))')
if [ -n "$outidx" ]; then
   echo "outlier idxes: $outidx"
   echo -n "outlier labels: "
   3dinfo -label "$prefix[$outidx]"
fi

